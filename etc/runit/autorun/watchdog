#!/bin/sh
#
# Activate/deactivate SERVICES if my public IP
# matches the DOMAINS in /etc/default/public-domain
# (cloux@rote.ch)

# Run periodically, every DELAY seconds
DELAY=15

# echo date format
DATEFMT='%Y-%m-%d_%H:%M:%S.%N'

# load SERVICES to activate/deactivate, if DOMAINS resolve to me
# if one of them is empty, watchdog doesn't have to run
[ -s /etc/default/public-domain ] && . /etc/default/public-domain
([ "$DOMAINS" ] && [ "$SERVICES" ]) || exit

while true; do

	# reload public-domain config
	. /etc/default/public-domain 2>/dev/null

	# check if one of the DOMAINS resolves to IP address of this server
	PUBLIC_IP=$(public-ip 2>/dev/null)
	[ $? -eq 0 ] || exit
	if [ "$PUBLIC_IP" ] && [ "$PUBLIC_IP" != "$(cat /var/run/public-ip 2>/dev/null)" ]; then
		printf "%s" "$PUBLIC_IP" >/var/run/public-ip
		printf "%s: Public IP changed to %s, " "$(date "+$DATEFMT")" "$PUBLIC_IP"
		if [ $(printf "%s" "$PUBLIC_IP" | grep -c '[a-z]') -eq 0 ]; then
			printf "no assigned domain, deactivating services\n"
			svdeactivate $SERVICES 2>&1
		else
			printf "activating services\n"
			svactivate $SERVICES 2>&1
		fi
		printf "%s: DONE\n" "$(date "+$DATEFMT")"
	fi

	# cycle with delay
	sleep $DELAY

done
